<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Windy.WebMVC.Web2.DBAccess" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="OperationMaster" type="MedQC.Web.Models.OperationMaster,MedQC.Web"></typeAlias>
  </alias>

  <resultMaps>
    <resultMap id="Windy.WebMVC.Web2.DBAccess.OperationMaster-result" class="OperationMaster">
      <result property="PATIENT_ID" column="PATIENT_ID"  />
      <result property="VISIT_ID" column="VISIT_ID" />
      <result property="OPER_ID" column="OPER_ID" />
      <result property="DEPT_STAYED" column="DEPT_STAYED" />
      <result property="OPERATING_ROOM" column="OPERATING_ROOM" />
      <result property="OPERATING_ROOM_NO" column="OPERATING_ROOM_NO" />
      <result property="DIAG_BEFORE_OPERATION" column="DIAG_BEFORE_OPERATION" />
      <result property="PATIENT_CONDITION" column="PATIENT_CONDITION" />
      <result property="OPERATION_SCALE" column="OPERATION_SCALE" />
      <result property="DIAG_AFTER_OPERATION" column="DIAG_AFTER_OPERATION" />
      <result property="EMERGENCY_INDICATOR" column="EMERGENCY_INDICATOR" />
      <result property="ISOLATION_INDICATOR" column="ISOLATION_INDICATOR" />
      <result property="OPERATION_CLASS" column="OPERATION_CLASS" />
      <result property="OPERATING_DEPT" column="OPERATING_DEPT" />
      <result property="SURGEON" column="SURGEON" />
      <result property="FIRST_ASSISTANT" column="FIRST_ASSISTANT" />
      <result property="SECOND_ASSISTANT" column="SECOND_ASSISTANT" />
      <result property="THIRD_ASSISTANT" column="THIRD_ASSISTANT" />
      <result property="FOURTH_ASSISTANT" column="FOURTH_ASSISTANT" />
      <result property="ANESTHESIA_METHOD" column="ANESTHESIA_METHOD" />
      <result property="ANESTHESIA_DOCTOR" column="ANESTHESIA_DOCTOR" />
      <result property="ANESTHESIA_ASSISTANT" column="ANESTHESIA_ASSISTANT" />
      <result property="BLOOD_TRAN_DOCTOR" column="BLOOD_TRAN_DOCTOR" />
      <result property="FIRST_OPERATION_NURSE" column="FIRST_OPERATION_NURSE" />
      <result property="SECOND_OPERATION_NURSE" column="SECOND_OPERATION_NURSE" />
      <result property="FIRST_SUPPLY_NURSE" column="FIRST_SUPPLY_NURSE" />
      <result property="SECOND_SUPPLY_NURSE" column="SECOND_SUPPLY_NURSE" />
      <result property="NURSE_SHIFT_INDICATOR" column="NURSE_SHIFT_INDICATOR" />
      <result property="START_DATE_TIME" column="START_DATE_TIME" />
      <result property="END_DATE_TIME" column="END_DATE_TIME" />
      <result property="SATISFACTION_DEGREE" column="SATISFACTION_DEGREE" />
      <result property="SMOOTH_INDICATOR" column="SMOOTH_INDICATOR" />
      <result property="IN_FLUIDS_AMOUNT" column="IN_FLUIDS_AMOUNT" />
      <result property="OUT_FLUIDS_AMOUNT" column="OUT_FLUIDS_AMOUNT" />
      <result property="BLOOD_LOSSED" column="BLOOD_LOSSED" />
      <result property="BLOOD_TRANSFERED" column="BLOOD_TRANSFERED" />
      <result property="ENTERED_BY" column="ENTERED_BY" />
      <result property="ANES_START_DATE_TIME" column="ANES_START_DATE_TIME" />
      <result property="RETURN_DATE_TIME" column="RETURN_DATE_TIME" />
      <result property="ENTER_DATE" column="ENTER_DATE" />
      <result property="ARRIVE_DATE_TIME" column="ARRIVE_DATE_TIME" />
      <result property="SERIAL_NO" column="SERIAL_NO" />
      <result property="SCHEDULED_DATE_TIME" column="SCHEDULED_DATE_TIME" />
      <result property="REQ_DATE_TIME" column="REQ_DATE_TIME" />
      <result property="SEQUENCE" column="SEQUENCE" />
      <result property="NOTES_ON_OPERATION" column="NOTES_ON_OPERATION" />
      <result property="REQ_BY" column="REQ_BY" />
      <result property="NAME" column="NAME" />
      <result property="DEPT_CODE" column="DEPT_CODE" />
      <result property="DEPT_NAME" column="DEPT_NAME" />
      <result property="ADMISSION_DATE_TIME" column="ADMISSION_DATE_TIME" />
      <result property="DISCHARGE_DATE_TIME" column="DISCHARGE_DATE_TIME" />
      <result property="SEX" column="SEX" />
      <result property="AGE" column="AGE" />
      <result property="ATTENDING_DOCTOR" column="ATTENDING_DOCTOR" />
      <result property="INPDAYS" column="INPDAYS" />
      <result property="OPERATION_NAME" column="OPERATION_NAME" />
      <result property="OPERATION_SCALE" column="OPERATION_SCALE" />
      <result property="SURGEON" column="SURGEON" />
      <result property="ANESTHESIA_METHOD" column="ANESTHESIA_METHOD" />
      <result property="PATIENT_CONDITION" column="PATIENT_CONDITION" />
      <result property="WOUND_GRADE" column="WOUND_GRADE" />
      <result property="BLOOD_TRAN_VOL" column="BLOOD_TRAN_VOL" />
      <result property="CONSULTATION_TIMES" column="CONSULTATION_TIMES" />
      <result property="EMER_TREAT_TIMES" column="EMER_TREAT_TIMES" />
      <result property="COST" column="COST" />
      <result property="DRUG_COST" column="DRUG_COST" />
      <result property="CHARGE_TYPE" column="CHARGE_TYPE" />
      <result property="WARD_CODE" column="WARD_CODE" />
      <result property="WARD_NAME" column="WARD_NAME" />
      <result property="BED_NO" column="BED_NO" />
      <result property="OPROOM" column="OPROOM" />
      <result property="INFECTIONMEMO" column="INFECTIONMEMO" />
    </resultMap>
  </resultMaps>
  <statements>
    <select id="Operation.OperationMaster.GetOperationMasters" parameterClass="Hashtable" resultMap="OperationMaster-result">
      <![CDATA[ 
       select 
       t.*,
       DEPT_CODE,
       (select DEPT_NAME
          from DEPT_DICT d
         where dept_code =
               substr(nvl(t4.dept_code, t5.dept_admission_to), 1, 4)) DEPT_NAME,
       (select DEPT_NAME from DEPT_DICT d where dept_code = t4.ward_code) ward_NAME,
       t4.ward_code,
       t2.NAME,
       T.patient_id,
       t.visit_id,
       t2.CHARGE_TYPE,
       t5.admission_date_time as admission_date_time,
       t5.discharge_date_time as discharge_date_time,
       t2.SEX,
       ceil(months_between(sysdate, t2.DATE_OF_BIRTH) / 12) - 1 AGE,
       t5.ATTENDING_DOCTOR,
       t6.diagnosis_desc,
       t3.OPERATION Operation_Name,
       t3.OPERATION_CODE OPERATION_CODE,
       t.operation_scale,
       t.START_DATE_TIME,
       t.END_DATE_TIME,
       t.SURGEON,
       TRUNC((case
               when t5.DISCHARGE_DATE_TIME is null then
                SYSDATE
               else
                t5.DISCHARGE_DATE_TIME
             end) - t5.admission_date_time) INPDAYS,
       t.ANESTHESIA_METHOD,
       t5.BLOOD_TRAN_VOL,
       (select count(*)
          from consultation_apply_master
         where patient_id = t.patient_id
           and visit_id = t.visit_id) as consultation_Times,
       t5.EMER_TREAT_TIMES,
       t.PATIENT_CONDITION,
       t3.WOUND_GRADE,
       t4.BED_NO,
       t.OPER_ID,
       (select DEPT_NAME
          from DEPT_DICT d
         where t.OPERATING_ROOM = d.DEPT_CODE) OPROOM,
       t.OPERATING_ROOM,
       '待计算' as  CONTINUED_TIMESPAN,
       t7.diagnosis_desc as InfectionMemo,
       (select sum(costs)
          from INP_BILL_DETAIL
         where patient_id = t.patient_id
           and visit_id = t.visit_id
           and (item_class = 'A' or item_class = 'B')) as Drug_Cost,
       (select sum(costs)
          from INP_BILL_DETAIL
         where patient_id = t.patient_id
           and visit_id = t.visit_id) as Cost

  from OPERATION_MASTER t
  left join PAT_MASTER_INDEX t2
    on t.PATIENT_ID = t2.PATIENT_ID
  left join OPERATION_NAME t3
    on t.PATIENT_ID = t3.PATIENT_ID
   and t.VISIT_ID = t3.VISIT_ID
   and t.OPER_ID = t3.OPER_ID
   and t3.OPERATION_NO = 1
  left join PATS_IN_HOSPITAL t4
    on t.PATIENT_ID = t4.PATIENT_ID
   and t.VISIT_ID = t4.VISIT_ID
 inner join pat_visit t5
    on t5.patient_id = trim(t.patient_id)
   and t5.visit_id = t.visit_id
  left join DIAGNOSIS t6
    on t6.patient_id = t.patient_id
   and t6.visit_id = t.visit_id
   and t6.diagnosis_type = '1'
   and t6.diagnosis_No = '1'
  left join DIAGNOSIS t7
    on t7.patient_id = t.patient_id
   and t7.visit_id = t.visit_id
   and t7.diagnosis_type = '6'
   and t7.diagnosis_No = '1'
 where (t.patient_id, t.visit_id) in
       (select PATIENT_ID, VISIT_ID
          from OPERATION_MASTER
         where visit_id > 0
           and START_DATE_TIME >= to_Date('2013-01-16', 'yyyy-mm-dd')
           and START_DATE_TIME <=
               to_date('2013-12-27 23:59:59', 'yyyy-mm-dd HH24:mi:ss')
        union
        select patient_id, visit_id
          from (select trunc(a.admission_date_time, 'dd') -
                       trunc((b.discharge_date_time), 'dd') days,
                       b.patient_id,
                       b.visit_id,
                       b.admission_date_time
                  from pat_visit a, pat_visit b
                 where a.visit_id > 1
                   and b.patient_id = a.patient_id
                   and b.visit_id = a.visit_id - 1
                   and substr(a.dept_admission_to, 1, 4) =
                       substr(b.dept_admission_to, 1, 4)
                   and (a.patient_id, a.visit_id) in
                       (select PATIENT_ID, VISIT_ID
                          from OPERATION_MASTER
                         Where visit_id > 0
                           and START_DATE_TIME >=
                               to_Date('2013-01-16', 'yyyy-mm-dd')
                           and START_DATE_TIME <=
                               to_date('2013-12-27 23:59:59',
                                       'yyyy-mm-dd HH24:mi:ss'))) m
         where 1 = 1
           and m.days >= '0'
           and m.days <= '31')
 order by t.patient_id, T.VISIT_ID, t.oper_id ]]>
    </select>
    <sql id="orderby">
      order by t.patient_id, T.VISIT_ID, t.oper_id
    </sql>
    <select id="Operation.OperationMaster.GetSuspectedReturns" parameterClass="Hashtable" resultMap="OperationMaster-result">
      <![CDATA[ 
      select 
       t.*,
       '待计算' as  CONTINUED_TIMESPAN,
       t.DEPT_STAYED as DEPT_CODE,
       (select DEPT_NAME
          from DEPT_DICT d
         where dept_code =
               substr( t5.dept_admission_to, 1, 4)) DEPT_NAME,
       (select DEPT_NAME
          from DEPT_DICT d
         where dept_code =
               substr(nvl(t4.dept_code, t5.dept_admission_to), 1, 4)) DEPT_NAME,
       (select DEPT_NAME from DEPT_DICT d where dept_code = t4.ward_code) ward_NAME,
       t4.ward_code,
       t2.NAME,
       T.patient_id,
       t.visit_id,
       t2.CHARGE_TYPE,
       t5.admission_date_time as admission_date_time,
       t5.discharge_date_time as discharge_date_time,
       t2.SEX,
       ceil(months_between(sysdate, t2.DATE_OF_BIRTH) / 12) - 1 AGE,
       t5.ATTENDING_DOCTOR,
       t6.diagnosis_desc,
       t3.OPERATION Operation_Name,
       t3.OPERATION_CODE OPERATING_CODE,
       t.operation_scale,
       t.START_DATE_TIME,
       t.END_DATE_TIME,
       t.SURGEON,
       TRUNC((case
               when t5.DISCHARGE_DATE_TIME is null then
                SYSDATE
               else
                t5.DISCHARGE_DATE_TIME
             end) - t5.admission_date_time) INPDAYS,
       t.ANESTHESIA_METHOD,
       t5.BLOOD_TRAN_VOL,
       (select count(*)
          from consultation_apply_master
         where patient_id = t.patient_id
           and visit_id = t.visit_id) as consultation_Times,
       t5.EMER_TREAT_TIMES,
       t.PATIENT_CONDITION,
       t3.WOUND_GRADE,
       t4.BED_NO,
       t.OPER_ID,
       (select DEPT_NAME
          from DEPT_DICT d
         where t.OPERATING_ROOM = d.DEPT_CODE) OPROOM,
       t.OPERATING_ROOM,
        t7.diagnosis_desc as InfectionMemo,
         (select sum(costs)
          from INP_BILL_DETAIL
         where patient_id = t.patient_id
           and visit_id = t.visit_id
           and (item_class = 'A' or item_class = 'B')) as Drug_Cost,
       (select sum(costs)
          from INP_BILL_DETAIL
         where patient_id = t.patient_id
           and visit_id = t.visit_id) as Cost
  from OPERATION_MASTER t
  left join PAT_MASTER_INDEX t2
    on t.PATIENT_ID = t2.PATIENT_ID
  left join OPERATION_NAME t3
    on t.PATIENT_ID = t3.PATIENT_ID
   and t.VISIT_ID = t3.VISIT_ID
   and t.OPER_ID = t3.OPER_ID
   and t3.OPERATION_NO = 1
    left join PATS_IN_HOSPITAL t4
    on t.PATIENT_ID = t4.PATIENT_ID
   and t.VISIT_ID = t4.VISIT_ID
 inner join pat_visit t5
    on t5.patient_id = trim(t.patient_id)
   and t5.visit_id = t.visit_id
  left join DIAGNOSIS t6
    on t6.patient_id = t.patient_id
   and t6.visit_id = t.visit_id
   and t6.diagnosis_type = '1'
   and t6.diagnosis_No = '1'
  left join DIAGNOSIS t7
    on t7.patient_id = t.patient_id
   and t7.visit_id = t.visit_id
   and t7.diagnosis_type = '6'
   and t7.diagnosis_No = '1'
 where  (t.patient_id, t.visit_id) in
        (select PATIENT_ID, VISIT_ID
           from OPERATION_MASTER
          where visit_id > 0
            and START_DATE_TIME >= to_Date('2012-12-27', 'yyyy-mm-dd')
            and START_DATE_TIME <=
                to_date('2013-12-28 23:59:59', 'yyyy-mm-dd HH24:mi:ss')
         union
         select patient_id, visit_id
           from (select trunc(a.admission_date_time, 'dd') -
                        trunc((b.discharge_date_time), 'dd') days,
                        b.patient_id,
                        b.visit_id,
                        b.admission_date_time
                   from pat_visit a, pat_visit b
                  where a.visit_id > 1
                    and b.patient_id = a.patient_id
                    and b.visit_id = a.visit_id - 1
                    and substr(a.dept_admission_to, 1, 4) =
                        substr(b.dept_admission_to, 1, 4)
                    and (a.patient_id, a.visit_id) in
                        (select PATIENT_ID, VISIT_ID
                           from OPERATION_MASTER
                          Where visit_id > 0
                            and START_DATE_TIME >=
                                to_Date('2012-12-27', 'yyyy-mm-dd')
                            and START_DATE_TIME <=
                                to_date('2013-12-28 23:59:59',
                                        'yyyy-mm-dd HH24:mi:ss'))) m
          where 1 = 1
            and m.days >= '0'
            and m.days <= '31')   ]]>


      <isNotNull prepend="and" property="PATIENT_ID">
        t.PATIENT_ID=#PATIENT_ID#
      </isNotNull>
      <isNotEmpty prepend="and" property="VISIT_ID">
        t.VISIT_ID=#VISIT_ID#
      </isNotEmpty>
      <include refid="orderby"></include>
    </select>
    <!--<select id="SysConfig.SysRole.GetTotalCount" parameterClass="Hashtable" resultClass="int">
      SELECT COUNT(*) FROM sys_Role t   where 1=1

      <dynamic>
        <isNotEmpty prepend=" AND " property="sysRole">T.name like '%$sysRole.Name$%'</isNotEmpty>
      </dynamic>

    </select>-->

    <!--<select id="SysConfig.SysRole.GetRolesByUserID" parameterClass="Hashtable" resultMap="SysRole-result">
      select A.ID,A.NAME,A.DESCRIPTION from sys_role A, sys_user_role B
      where A.Id=b.role_id and b.user_id = $UserID$
    </select>

    <select id="SysConfig.SysRole.GetSysRoles" parameterClass="SysRole" resultMap="SysRole-result">
      <![CDATA[
         select *
       from SYS_ROLE 
     ]]>
    </select>
    <select id="SysConfig.SysRole.QueryOne" parameterClass="Hashtable" resultMap="SysRole-result">
      select a.*
      from SYS_Role a
      where a.ID=$ID$
    </select>-->

    <!--<insert id="SysConfig.SysRole.Insert" parameterClass="SysRole" >
      <selectKey  type="pre" property="ID" resultClass="int" >
        <![CDATA[ 
          select seq_sys_Role.nextval AS VALUE from dual
        ]]>
      </selectKey>
      INSERT INTO sys_Role (ID,NAME,description)
      VALUES (#ID#,#Name#,#Description#)
    </insert>

    <update id="SysConfig.SysRole.Update" parameterClass="SysRole">
      UPDATE SYS_Role SET name = #Name#,description = #Description#
      WHERE ID = #ID#
    </update>

    <delete id="SysConfig.SysRole.Delete" parameterClass="Hashtable">
      DELETE FROM SYS_Role WHERE ID = $ID$
    </delete>-->
  </statements>
</sqlMap>