<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Windy.WebMVC.Web2.DBAccess" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="OperationName" type="MedQC.Web.Models.OperationName,MedQC.Web"></typeAlias>
  </alias>

  <resultMaps>
    <resultMap id="Windy.WebMVC.Web2.DBAccess.OperationName-result" class="OperationName">
      <result property="PATIENT_ID" column="PATIENT_ID"  />
      <result property="VISIT_ID" column="VISIT_ID" />
      <result property="OPER_ID" column="OPER_ID" />
      <result property="OPERATION_NO" column="OPERATION_NO" />
      <result property="OPERATION" column="OPERATION" />
      <result property="OPERATION_CODE" column="OPERATION_CODE" />
      <result property="OPERATION_SCALE" column="OPERATION_SCALE" />
      <result property="WOUND_GRADE" column="WOUND_GRADE" />
      <result property="SERIAL_NO" column="SERIAL_NO" />
    </resultMap>
  </resultMaps>
  <statements>
    <select id="Operation.OperationName.GetOperationNames" parameterClass="Hashtable" resultMap="OperationName-result">
      select * from operation_name t
      where 1=1
      <dynamic>
        <isNotEmpty prepend=" AND " property="operationName.PATIENT_ID">T.PATIENT_ID = '$operationName.PATIENT_ID$'</isNotEmpty>
      </dynamic>
      <dynamic>
        <isNotEmpty prepend=" AND " property="operationName.VISIT_ID">T.VISIT_ID = $operationName.VISIT_ID$</isNotEmpty>
      </dynamic>
      <dynamic>
        <isNotEmpty prepend=" AND " property="operationName.OPER_ID">T.OPER_ID = $operationName.OPER_ID$</isNotEmpty>
      </dynamic>
     
    </select>
    
  <!--<select id="Operation.OperationName.QueryForEvaluation" parameterClass="Hashtable" resultMap="OperationName-result">
      select 
      Patient_ID,
      Visit_ID,
      Name,
      Dept_Code,
      Dept_Name,
      Admission_Date_Time,
      Discharge_Date_Time,
      Sex,
      Age,
      Attending_Doctor,
      Main_Diagnosis,
      InpDays,
      Operation_No,
      Operation_Name,
      Operation_Code,
      OPeration_Scale,
      Operation_Date_Time,
      Continued_TimeSpan,
      Surgeon,
      Anesthesia_Method,
      Patient_Condition,
      Wound_Grade,
      Operating_Code,
      Operating_Name,
      Blood_Tran_Vol,
      Consultation_Times,
      Emer_Treat_Times,
      Infection_Diagnosis,
      Cost,
      Drug_Cost,
      Complication,
      Oper_Date_Time,
      Memo,
      Charge_Type,
      WARD_CODE,
      WARD_NAME
      from sc_operation
      where 1 = 1
      and patient_id  = $PATIENT_ID$ and visit_id =$VISIT_ID$ order by Operation_No
    </select>-->
    <!--<select id="SysConfig.SysRole.GetTotalCount" parameterClass="Hashtable" resultClass="int">
      SELECT COUNT(*) FROM sys_Role t   where 1=1

      <dynamic>
        <isNotEmpty prepend=" AND " property="sysRole">T.name like '%$sysRole.Name$%'</isNotEmpty>
      </dynamic>

    </select>-->

    <!--<select id="SysConfig.SysRole.GetRolesByUserID" parameterClass="Hashtable" resultMap="SysRole-result">
      select A.ID,A.NAME,A.DESCRIPTION from sys_role A, sys_user_role B
      where A.Id=b.role_id and b.user_id = $UserID$
    </select>

    <select id="SysConfig.SysRole.GetSysRoles" parameterClass="SysRole" resultMap="SysRole-result">
      <![CDATA[
         select *
       from SYS_ROLE 
     ]]>
    </select>
    <select id="SysConfig.SysRole.QueryOne" parameterClass="Hashtable" resultMap="SysRole-result">
      select a.*
      from SYS_Role a
      where a.ID=$ID$
    </select>-->

    <!--<insert id="Operation.OperationName.Insert" parameterClass="OperationName" >
      INSERT INTO sc_operation (PATIENT_ID,VISIT_ID,NAME,DEPT_CODE,DEPT_NAME,ADMISSION_DATE_TIME,DISCHARGE_DATE_TIME,SEX,AGE,ATTENDING_DOCTOR,MAIN_DIAGNOSIS,INPDAYS,OPERATION_NO,OPERATION_NAME,OPERATION_CODE,OPERATION_SCALE,OPERATION_DATE_TIME,CONTINUED_TIMESPAN,SURGEON,ANESTHESIA_METHOD,PATIENT_CONDITION,WOUND_GRADE,OPERATING_CODE,OPERATING_NAME,BLOOD_TRAN_VOL                      ,CONSULTATION_TIMES,EMER_TREAT_TIMES,INFECTION_DIAGNOSIS,COST,DRUG_COST,COMPLICATION,OPER_DATE_TIME,MEMO,CHARGE_TYPE,WARD_CODE,WARD_NAME)
      VALUES (#PATIENT_ID#,#VISIT_ID#,#NAME#,#DEPT_CODE#,#DEPT_NAME#,#ADMISSION_DATE_TIME#,#DISCHARGE_DATE_TIME#,#SEX#,#AGE#,#ATTENDING_DOCTOR#,#MAIN_DIAGNOSIS#,#INPDAYS#,#OPERATION_NO#,#OPERATION_NAME#,#OPERATION_CODE#,#OPERATION_SCALE#,#OPERATION_DATE_TIME#,#CONTINUED_TIMESPAN#,#SURGEON#,#ANESTHESIA_METHOD#,#PATIENT_CONDITION#,#WOUND_GRADE#,#OPERATING_CODE#,#OPERATING_NAME#,#BLOOD_TRAN_VOL#,#CONSULTATION_TIMES#,#EMER_TREAT_TIMES#,#INFECTION_DIAGNOSIS#,#COST#,#DRUG_COST#,#COMPLICATION#,#OPER_DATE_TIME#,#MEMO#,#CHARGE_TYPE#,#WARD_CODE#,#WARD_NAME#)
    </insert>-->
    <!--
    <update id="SysConfig.SysRole.Update" parameterClass="SysRole">
      UPDATE SYS_Role SET name = #Name#,description = #Description#
      WHERE ID = #ID#
    </update>

    <delete id="SysConfig.SysRole.Delete" parameterClass="Hashtable">
      DELETE FROM SYS_Role WHERE ID = $ID$
    </delete>-->
  </statements>
</sqlMap>