<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Windy.WebMVC.Web2.DBAccess" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="SysMenu" type="MedQC.Web.Models.SysMenu,MedQC.Web"></typeAlias>
  </alias>

  <resultMaps>
    <resultMap id="Windy.WebMVC.Web2.DBAccess.SysMenu-result" class="SysMenu">
      <result property="ID" column="ID"  />
      <result property="MenuName" column="MENU_NAME" />
      <result property="Url" column="URL" />
      <result property="ParentID" column="PARENT_ID" />
      <result property="Icon" column="Icon" />
      <result property="Description" column="DESCRIPTION" />
      <result property="MenuType" column="MENU_TYPE" />
      <result property="ParentName" column="PARENT_NAME" />

    </resultMap>
  </resultMaps>
  <statements>
    <select id="SysConfig.SysMenu.GetSysMenus" parameterClass="SysMenu" resultMap="SysMenu-result">
      <![CDATA[
         select a.*,b.MENU_NAME as PARENT_NAME
       from SYS_MENU a,SYS_MENU b
       where a.PARENT_ID=b.ID(+)
     ]]>
    </select>

    <select id="SysConfig.SysMenu.QueryOne" parameterClass="Hashtable" resultMap="SysMenu-result">
      select a.*,b.MENU_NAME as PARENT_NAME
      from SYS_MENU a,SYS_MENU b
      where a.PARENT_ID=b.ID(+) and a.ID=$ID$
    </select>

    <select id="SysConfig.SysMenu.GetChildNodes" parameterClass="Hashtable" resultMap="SysMenu-result">
      select t.*,'' as PARENT_NAME  from
      (
      (
      select a.* from sys_menu a,sys_user_menu b
      where a.id=b.menu_id and b.user_id =$UserID$
      )
      union
      (
      select a.* from sys_menu a,sys_role_menu b, sys_user_role c
      where a.id=b.menu_id and b.role_id=c.role_id and c.user_id =$UserID$
      )
      ) t
      connect by prior id = PARENT_ID
      start with id = $ParentID$
    </select>

    <insert id="SysConfig.SysMenu.Insert" parameterClass="SysMenu" >
      <selectKey  type="pre" property="ID" resultClass="int" >
        <![CDATA[ 
          select seq_sys_menu.nextval AS VALUE from dual
        ]]>
      </selectKey>
      INSERT INTO SYS_MENU (ID,MENU_NAME,URL,PARENT_ID,ICON,DESCRIPTION,MENU_TYPE)
      VALUES (#ID#,#MenuName#,#Url#,#ParentID#,#Icon#,#Description#,#MenuType#)
    </insert>
    <update id="SysConfig.SysMenu.Update" parameterClass="SysMenu">
      UPDATE SYS_MENU SET MENU_NAME = #MenuName#,URL = #Url#,PARENT_ID = #ParentID#,ICON=#Icon#,DESCRIPTION=#Description#,MENU_TYPE=#MenuType#
      WHERE ID = #ID#
    </update>
    <delete id="SysConfig.SysMenu.Delete" parameterClass="Hashtable">
      DELETE FROM SYS_MENU WHERE ID = $ID$
    </delete>

    <!--用户菜单关联-->
    <select id="SysConfig.SysMenu.GetMenusByUserID" parameterClass="Hashtable" resultMap="SysMenu-result">
      select A.ID,A.MENU_NAME,A.URL,A.PARENT_ID,ICON,DESCRIPTION,MENU_TYPE,'' as PARENT_NAME from sys_menu A, sys_user_menu B
      where A.Id=b.menu_id and b.user_id = $UserID$
    </select>
    <insert id="SysConfig.SysMenu.InsertUserMenu" parameterClass="Hashtable" >
      INSERT INTO sys_user_MENU (USER_ID,MENU_ID)
      VALUES ($userid$,$menuid$)
    </insert>
    <delete id="SysConfig.SysMenu.DeleteUserMenu" parameterClass="Hashtable">
      DELETE FROM SYS_USER_MENU WHERE USER_ID = $userid$
    </delete>


    <!--角色菜单关联-->
    <select id="SysConfig.SysMenu.GetMenusByRoleID" parameterClass="Hashtable" resultMap="SysMenu-result">
      select A.ID,A.MENU_NAME,A.URL,A.PARENT_ID,ICON,DESCRIPTION,MENU_TYPE,'' as PARENT_NAME from sys_menu A, sys_role_menu B
      where A.Id=b.menu_id and b.role_id = $RoleID$
    </select>
    <insert id="SysConfig.SysMenu.InsertRoleMenu" parameterClass="Hashtable" >
      INSERT INTO sys_ROLE_MENU (ROLE_ID,MENU_ID)
      VALUES ($roleid$,$menuid$)
    </insert>
    <delete id="SysConfig.SysMenu.DeleteRoleMenu" parameterClass="Hashtable">
      DELETE FROM SYS_ROLE_MENU WHERE ROLE_ID = $roleid$
    </delete>


  </statements>
</sqlMap>